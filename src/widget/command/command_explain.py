#!/usr/bin/env python
# -*- coding: utf-8 -*-

from parameter import EnumData
from widget.command import ParamRCombo, ParamCCombo, ParamVSpin
from widget.command.param_widget import ParamWidget


class CommandExplain:
    def __init__(self, **kwargs):
        self.w: dict[str, ParamWidget] = dict()

        self.w['机体'] = ParamRCombo('选择机体', 0, kwargs.get('robots'))
        self.w['机师'] = ParamRCombo('选择机师', 0, kwargs.get('pilots') | {-0x1: ''})
        self.w['文本'] = ParamVSpin('选择文本', 0, '04X', mapping=kwargs.get('messages'))

        self.w['关卡'] = ParamRCombo('选择关卡', 0, EnumData.STAGE)
        self.w['音乐'] = ParamRCombo('选择音乐', 0, EnumData.MUSIC)
        self.w['事件'] = ParamRCombo('选择事件', 0x10, EnumData.EVENT)
        self.w['芯片'] = ParamRCombo('选择芯片', 0, EnumData.PART)
        self.w['精神'] = ParamRCombo('选择精神', 0, EnumData.SPIRIT)

        self.w['表情'] = ParamRCombo('选择表情', 0, EnumData.COMMAND['表情'])
        self.w['阵营'] = ParamRCombo('选择阵营', 0, EnumData.COMMAND['阵营'])
        self.w['比较'] = ParamRCombo('比较符号', 2, EnumData.COMMAND['比较'])
        self.w['触发'] = ParamRCombo('触发状态', 0, EnumData.COMMAND['触发'])
        self.w['点数'] = ParamRCombo('全局点数', 0, EnumData.COMMAND['点数'])
        self.w['状态'] = ParamRCombo('存在状态', 0, EnumData.COMMAND['状态'])
        self.w['行动'] = ParamRCombo('行动状态', 0, EnumData.COMMAND['行动'])
        self.w['移动'] = ParamRCombo('移动状态', 0, EnumData.COMMAND['移动'])
        self.w['势力'] = ParamCCombo('势力编号', 1, EnumData.COMMAND['势力'], sep='|')
        self.w['选项'] = ParamCCombo('选项序号', 1, EnumData.COMMAND['选项'], sep='＆')
        self.w['演出'] = ParamCCombo('选择演出', 0, EnumData.COMMAND['演出'], sep=' ')

        self.w['无效'] = ParamVSpin('无效参数', -0x80, '2X')

        self.settings: dict[int, tuple[str, list[ParamWidget], str, str]] = {
            0x00: ('BLOCK<{0}>',
                   [ParamVSpin('区块序号', 0, 'X')],
                   '[00]流程控制 - BLOCK区块号',
                   '各区块在运行中有时机差异'),
            0x01: ('STOP',
                   [],
                   '[01]流程控制 - BLOCK区块结束符',
                   '每个区块均需要有结束符'),
            0x02: ('ALL ({0})',
                   [ParamVSpin('套嵌层级', 0)],
                   '[02]流程控制 - 检查全部表达式是否为真',
                   '只有当后跟的表达式全部为真才会执行THEN，反之执行ELSE'),
            0x03: ('ANY ({0})',
                   [ParamVSpin('套嵌层级', 0)],
                   '[03]流程控制 - 检查任一表达式是否为真',
                   '只需要后跟的表达式有一条为真就执行THEN，全部为假则执行ELSE'),
            0x04: ('THEN ({0})',
                   [ParamVSpin('套嵌层级', 0)],
                   '[04]流程控制 - 检查结果为真时执行',
                   '检查结果为真时执行'),
            0x05: ('ELSE ({0})',
                   [ParamVSpin('套嵌层级', 0)],
                   '[05]流程控制 - 检查结果为假时执行',
                   '检查结果为假时执行'),
            0x06: ('END ({0})',
                   [ParamVSpin('套嵌层级', 0)],
                   '[06]流程控制 - 结束判断符',
                   '每个检查语句均需要有结束判断符'),
            0x08: ('GOTO {0}',
                   [ParamVSpin('目标偏移', 0, '04X')],
                   '[08]流程控制 - 跳转定位',
                   '跳至指定定位并顺延逐行执行'),
            0x09: ('RUN {0}',
                   [ParamVSpin('目标偏移', 0, '04X')],
                   '[09]流程控制 - 执行定位',
                   '从指定定位开始执行并在遇到BACK后回调'),
            0x0A: ('BACK',
                   [],
                   '[0A]流程控制 - 回调符号',
                   '从回调符号开始切回原转来的定位'),
            0x0B: ('載入地圖設計[{0}] 敵方設計[{0}] AI設計[{0}]',
                   [ParamVSpin('地图设计', 0, '02X'), ParamVSpin('敌方设计', 0, '02X'), ParamVSpin('AI设计', 0, '02X')],
                   '[0B]流程控制 - 载入场景相关信息',
                   '分别载入地图设计、敌方设计、AI设计'),
            0x0C: ('触發全局事件{0}',
                   [self.w['事件']],
                   '[0C]事件控制 - 触发全局事件',
                   '全局事件列表在修改器目录下的event.txt中，可根据需要自定义，适用于跨关卡的隐藏条件'),
            0x0D: ('触發場景事件[{0}]',
                   [ParamVSpin('场景事件', 0, '02X')],
                   '[0D]事件控制 - 触发场景事件',
                   '场景事件每次切换场景刷新，适用于本关内的隐藏条件'),
            0x0E: ('場景点数[{0}]{1}',
                   [ParamVSpin('场景点数', 0, '04X'), ParamVSpin('数值操作', 0, '+d')],
                   '[0E]事件控制 - 场景点数',
                   '场景点数每次切换场景刷新，适用于本关内的计数统计'),
            0x0F: ('全局点数{0}{1}',
                   [self.w['点数'], ParamVSpin('数值操作', 0, '+d')],
                   '[0F]事件控制 - 全局点数',
                   '全局点数包括熟练度、恋爱度等，用于跨关卡的点数操作'),
            0x10: ('全局事件{0}為{1}状態',
                   [self.w['事件'], self.w['触发']],
                   '[10]事件控制 - 判断全局事件触发情况',
                   '当全局事件已触发时返回真，否则为假'),
            0x11: ('場景事件[{0}]為{1}状態',
                   [ParamVSpin('场景事件', 0, '02X'), self.w['触发']],
                   '[11]事件控制 - 判断场景事件触发情况',
                   '当场景事件已触发时返回真， 否则为假'),
            0x12: ('場景点数[{0}]{1}{2}',
                   [ParamVSpin('场景点数', 0, '04X'), self.w['比较'], ParamVSpin('点数', 0)],
                   '[12]事件控制 - 比较场景点数数值情况',
                   '当比较表达式为真时返回真，否则为假'),
            0x13: ('全局点数{0}{1}{2}',
                   [self.w['点数'], self.w['比较'], ParamVSpin('点数', 0)],
                   '[13]事件控制 - 比较全局点数',
                   '当比较表达式为真时返回真，否则为假'),
            0x14: ('路綫為真實系',
                   [],
                   '[14]事件控制 - 路线为真实系',
                   '当路线选择为真实系时返回真，否则为假'),
            0x15: ('路綫為超級系',
                   [],
                   '[15]事件控制 - 路线为超级系',
                   '当路线选择为超级系时返回真，否则为假'),
            0x16: ('返回假',
                   [],
                   '[16]事件控制 - 必定返回假',
                   '无条件返回假'),
            0x17: ('{0} 表情{1}\n{3}',
                   [self.w['机师'], self.w['表情'], ParamVSpin('无效参数', 0), self.w['文本']],
                   '[17]文本语音 - 机师普通文本会话',
                   '指定机师以指定表情说指定文本内容'),
            0x18: ('{0} 表情{1}\n{3}',
                   [self.w['机师'], self.w['表情'], ParamVSpin('无效参数', 0), self.w['文本']],
                   '[18]文本语音 - 变量普通文本会话',
                   '主角或恋人以指定表情说文本内容，文本八套一组，按性格变化'),
            0x19: ('{1} 表情{2} 語音[{0}]\n{4}',
                   [ParamVSpin('语音', 0, '04X'), self.w['机师'], self.w['表情'], ParamVSpin('无效参数', 0), self.w['文本']],
                   '[19]文本语音 - 机师普通语音会话',
                   '指定机师以指定表情说指定文本内容并伴随指定语音'),
            0x1A: ('最終話不同主角對戰BOSS',
                   [ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X'),
                    ParamVSpin('未知参数', 0, '04X')],
                   '[1A]文本语音 - 主角特殊文本',
                   '最终话主角对战尤泽斯时所使用的特殊指令'),
            0x1B: ('{0} 表情{1}\n{3}',
                   [self.w['机师'], self.w['表情'], ParamVSpin('无效参数', 0), self.w['文本']],
                   '[1B]文本语音 - 变量普通语音会话',
                   '主角或恋人以指定表情说文本内容并伴随指定语音，文本八套一组，按性格变化'),
            0x1C: ('{0} 表情{1} 音樂「{4}」\n{3}',
                   [self.w['机师'], self.w['表情'], ParamVSpin('无效参数', 0), self.w['文本'], self.w['音乐']],
                   '[1C]文本语音 - 机师播放音乐会话',
                   '指定机师以指定表情说指定文本内容并伴随指定音乐'),
            0x1D: ('{0} 表情{1} 停止音樂\n{3}',
                   [self.w['机师'], self.w['表情'], ParamVSpin('无效参数', 0), self.w['文本']],
                   '[1D]文本语音 - 机师停止音乐会话',
                   '指定机师以指定表情说指定文本内容并停止指定音乐'),
            0x1E: ('勝利条件：\n{1}\n失敗条件：\n{3}',
                   [ParamVSpin('无效参数', 0), self.w['文本'],
                    ParamVSpin('无效参数', 0), self.w['文本']],
                   '[1E]文本语音 - 显示胜利与失败文本',
                   '更新显示胜利条件与失败条件'),
            0x1F: ('{0}選擇：\n{2}',
                   [self.w['机师'], ParamVSpin('无效参数', 0), self.w['文本']],
                   '[1F]文本语音 - 选项会话文本',
                   '指定机师在二选一选项文本中做选择'),
            0x21: ('選擇了第一行',
                   [ParamVSpin('无效参数', 0)],
                   '[21]文本语音 - 选项判断',
                   '指定机师在选项文本中选择了第一项'),
            0x22: ('場景勝利',
                   [ParamVSpin('未知参数', 0)],
                   '[22]场景控制 - 场景胜利',
                   '场景完成过关，参数未知'),
            0x23: ('場景失敗',
                   [],
                   '[23]场景控制 - 场景失败',
                   '场景失败 GAME OVER'),
            0x24: ('下一關為{0}',
                   [self.w['关卡']],
                   '[24]场景控制 - 选择下一关',
                   '选择下一关所用的指令'),
            0x25: ('当前回合{1}{0}',
                   [ParamVSpin('当前回合', 0), self.w['比较']],
                   '[25]场景控制 - 判断当前回合数',
                   '根据当前回合数的表达式返回真或假'),
            0x26: ('本方回合音樂為「{0}」\n敵方回合音樂為「{1}」',
                   [self.w['音乐'], self.w['音乐'], ParamVSpin('无效参数', 0)],
                   '[26]场景控制 - 设定场景音乐',
                   '根据选择分别设置本方回合默认音乐和敌方回合默认音乐'),
            0x27: ('播放音樂「{0}」',
                   [self.w['音乐']],
                   '[27]场景控制 - 播放音乐',
                   '播放指定音乐'),
            0x28: ('音樂復位',
                   [],
                   '[28]场景控制 - 音乐复位',
                   '停止播放指定音乐并复位为关卡默认音乐'),
            0x29: ('播放声音「{0}」',
                   [ParamVSpin('音效代码', 0, '04X')],
                   '[29]场景控制 - 播放声音',
                   '播放指定声音一次'),
            0x2A: ('播放動画「{0}」',
                   [ParamVSpin('动画选择', 0, '04X')],
                   '[2A]场景控制 - 播放动画',
                   '播放指定CG动画一次'),
            0x2B: ('静止等待{0}秒',
                   [ParamVSpin('未知参数', 3)],
                   '[2B]场景控制 - 静止等待',
                   '静止等待指定秒数，不确定'),
            0x2C: ('敵方設計第{0}組以第[{1}]勢力出擊設為{2}陣營到地圖絕對坐標',
                   [ParamVSpin('敌方组号', 0), self.w['势力'], self.w['阵营']],
                   '[2C]敌方出击 - 出击到绝对坐标',
                   '将敌方设计指定组的单位，出击到地图绝对坐标，并设定这些单位的势力和阵营'),
            0x2D: ('敵方設計第{0}組以第[{1}]勢力出擊設為{2}陣營到{3}的相對坐標',
                   [ParamVSpin('敌方组号', 0), self.w['势力'], self.w['阵营'], self.w['机师']],
                   '[2D]敌方出击 - 出击到相对坐标',
                   '将敌方设计指定组的单位，出击到指定机师的相对坐标，并设定这些单位的势力和阵营'),
            0x2F: ('敵方設計第{0}組以第[{1}]勢力復活設爲{2}陣營',
                   [ParamVSpin('敌方组号', 0), self.w['势力'], self.w['阵营']],
                   '[2F]敌方出击 - 复活出击',
                   '将敌方设计指定组复活并从被击破处原地出击'),
            0x30: ('格納庫开启',
                   [],
                   '[30]机库操作 - 机库开启',
                   '打开格纳库做机体机师的增删改操作'),
            0x31: ('格納庫關閉',
                   [],
                   '[31]机库操作 - 机库关闭',
                   '机体机师操作完毕后必须要关闭格纳库'),
            0x32: ('{0}入庫 机体{2}改 武器{1}改',
                   [self.w['机体'], ParamVSpin('武器改造', 0), ParamVSpin('机体改造', 0)],
                   '[32]机库操作 - 增加机体',
                   '增加指定机体并确定机体和武器的默认改造幅度'),
            0x33: ('{0}分流',
                   [self.w['机体']],
                   '[33]机库操作 - 机体分流',
                   '指定机体分流，在机体合流前无法在格纳库中看到，但改造保留'),
            0x34: ('{0}合流',
                   [self.w['机体']],
                   '[34]机库操作 - 机体合流',
                   '指定机体合流，保留分流时的改造，重新进入格纳库'),
            0x35: ('{0}离隊',
                   [self.w['机体']],
                   '[35]机库操作 - 机体离队',
                   '指定机体完全离队，不再保留改造'),
            0x36: ('{0}換成{1}',
                   [self.w['机体'], self.w['机体']],
                   '[36]机库操作 - 机体替换',
                   '将指定机体替换为另一台机体，并保留对应的改造'),
            0x37: ('{0}加入 机師{2}級 擊墜数{1}',
                   [self.w['机师'], ParamVSpin('击坠数', 0), ParamVSpin('等级', 1)],
                   '[37]机库操作 - 加入机师',
                   '指定机师加入并确定等级和击坠数'),
            0x38: ('{0}分流',
                   [self.w['机师']],
                   '[38]机库操作 - 机师分流',
                   '指定机师分流，在机师合流前无法在格纳库中看到，但等级和击坠数保留'),
            0x39: ('{0}合流',
                   [self.w['机师']],
                   '[39]机库操作 - 机师合流',
                   '指定机师合流，保留分流时的等级和击坠数，重新进入格纳库'),
            0x3A: ('{0}离隊',
                   [self.w['机师']],
                   '[3A]机库操作 - 机师离队',
                   '指定机师完全离队，不再保留等级和击坠数'),
            0x3B: ('{0}換成{1}',
                   [self.w['机师'], self.w['机师']],
                   '[3B]机库操作 - 机师替换',
                   '将指定机师替换为另一名机师，并保留等级和击坠数'),
            0x3C: ('出發操作相關未知指令',
                   [ParamVSpin('未知参数', 0)],
                   '[3C]出击操作 - 未知',
                   '未知'),
            0x3D: ('加入或强制換乘\n{0} 机師{2}級 擊墜数{1}\n{3} 机体{5}改 武器{4}改',
                   [self.w['机师'], ParamVSpin('击坠数', 0), ParamVSpin('等级', 1),
                    self.w['机体'], ParamVSpin('武器改造', 0), ParamVSpin('机体改造', 0)],
                   '[3D]机库操作 - 机师机体同时加入或强制换乘',
                   '未加入的情况下，机师机体同时以指定等级击坠数和改造加入\n已加入的情况下，则机师强制换乘该机体'),
            0x3E: ('{0}与搭乘机体分流',
                   [self.w['机师']],
                   '[3E]机库操作 - 机师与搭乘机体分流',
                   '指定机师与所搭乘的机体一同分流'),
            0x3F: ('{0}与搭乘机師分流',
                   [self.w['机体']],
                   '[3F]机库操作 - 机体与搭乘机师分流',
                   '指定机体与所搭乘的机师一同分流'),
            0x40: ('{0}与搭乘机体合流',
                   [self.w['机师']],
                   '[40]机库操作 - 机师与搭乘机体合流',
                   '指定机师与所搭乘的机体一同合流'),
            0x41: ('{0}与搭乘机師合流',
                   [self.w['机体']],
                   '[41]机库操作 - 机体与搭乘机师合流',
                   '指定机体与所搭乘的机师一同合流'),
            0x42: ('{0}与搭乘机体离隊',
                   [self.w['机师']],
                   '[42]机库操作 - 机师与搭乘机体离队',
                   '指定机师与所搭乘的机体一同离队'),
            0x43: ('{0}强制搭乘{1}',
                   [self.w['机师'], self.w['机体']],
                   '[43]机库操作 - 强制换乘',
                   '指定机师强制换乘指定机体'),
            0x44: ('{0}强制搭乘[07D]V2ガンダム',
                   [self.w['机师']],
                   '[44]机库操作 - 强制换乘V2ガンダム',
                   '指定机师强制换乘V2ガンダム'),
            0x45: ('{0}强制取消搭乘',
                   [self.w['机师']],
                   '[45]机库操作 - 机师强制取消搭乘',
                   '指定机师取消搭乘机体'),
            0x46: ('{0}强制取消搭乘',
                   [self.w['机体']],
                   '[46]机库操作 - 机体强制取消搭乘',
                   '指定机体取消搭乘机师'),
            0x47: ('{0}强制出場',
                   [self.w['机师']],
                   '[47]机库操作 - 机师强制出场',
                   '指定机师强制出场并从待出击列表中隐藏'),
            0x48: ('妖精{0}附加給{1}',
                   [self.w['机师'], self.w['机师']],
                   '[48]机库操作 - 妖精配属',
                   '指定妖精附加配属给指定机师'),
            0x49: ('{0}从出擊名單中隱藏',
                   [self.w['机师']],
                   '[49]机库操作 - 机师隐藏',
                   '指定机师从待出击列表中隐藏'),
            0x4A: ('{0}从出擊名單中隱藏',
                   [self.w['机体']],
                   '[4A]机库操作 - 机体隐藏',
                   '指定机体从待出击列表中隐藏'),
            0x4B: ('{0}强制搭乘空机体',
                   [self.w['机师']],
                   '[4B]机库操作 - 机师强制搭乘空机体',
                   '指定机师找任意空机体搭乘'),
            0x4E: ('{0}以分离状態出擊',
                   [self.w['机体']],
                   '[4E]机库操作 - 合体机以分离状态出击',
                   '指定合体机以分离状态出击'),
            0x4F: ('开始出擊',
                   [],
                   '[4F]出击操作 - 开始出击',
                   '出击打开'),
            0x50: ('出擊完畢',
                   [],
                   '[50]出击操作 - 出击完毕',
                   '出击关闭'),
            0x51: ('{0}出擊到地圖絕對坐標 X{1} Y{2}',
                   [self.w['机师'], ParamVSpin('X坐标', 0), ParamVSpin('Y坐标', 0)],
                   '[51]出击操作 - 机师出击到绝对坐标',
                   '将指定机师出击到地图绝对坐标'),
            0x52: ('{0}出擊到{3}相對坐標 X{1} Y{2}',
                   [self.w['机师'], ParamVSpin('X坐标', 0, '+d'), ParamVSpin('Y坐标', 0, '+d'), self.w['机师']],
                   '[52]出击操作 - 机师出击到相对坐标',
                   '将指定机师出击到另一机师的相对坐标'),
            0x54: ('{0}出擊到地圖絕對坐標 X{1} Y{2}',
                   [self.w['机体'], ParamVSpin('X坐标', 0), ParamVSpin('Y坐标', 0)],
                   '[54]出击操作 - 机体出击到绝对坐标',
                   '将指定机体出击到地图绝对坐标'),
            0x55: ('{0}出擊到{3}相對坐標 X{1} Y{2}',
                   [self.w['机体'], ParamVSpin('X坐标', 0, '+d'), ParamVSpin('Y坐标', 0, '+d'), self.w['机师']],
                   '[55]出击操作 - 机体出击到相对坐标',
                   '将指定机体出击到指定机师的相对坐标'),
            0x57: ('選擇{0}台机体出擊到地圖絕對坐標配置[{1}]',
                   [ParamVSpin('数量', 0), ParamVSpin('坐标配置', 0)],
                   '[57]出击操作 - 选择机体出击到绝对坐标配置',
                   '将指定数量的机体出击到地图设计中划定的绝对坐标配置'),
            0x58: ('選擇{0}台机体出擊到{2}相對坐標配置[{1}]',
                   [ParamVSpin('数量', 0), ParamVSpin('坐标配置', 0), self.w['机师']],
                   '[58]出击操作 - 选择机体出击到相对坐标配置',
                   '将指定数量的机体出击到指定机师的相对坐标配置'),
            0x5A: ('選擇母艦出擊到地圖絕對坐標 X{1} Y{2}',
                   [ParamVSpin('无效参数', 1), ParamVSpin('X坐标', 0), ParamVSpin('Y坐标', 0)],
                   '[5A]出击操作 - 选择母舰出击到绝对坐标',
                   '选择一艘母舰出击到地图绝对坐标'),
            0x5B: ('設定{0}等級為{2}{1}',
                   [self.w['机师'], ParamVSpin('设定等级', 0, '+d'), self.w['机师']],
                   '[5B]机库操作 - 设定机师等级',
                   '设定指定机师等级，可选择以另一机师等级为参照'),
            0x5C: ('{0}等級{1}',
                   [self.w['机师'], ParamVSpin('等级变化', 0, '+d')],
                   '[5C]机库操作 - 调整机师等级',
                   '调整指定机师等级'),
            0x5D: ('設定{0}擊墜数為{1}',
                   [self.w['机师'], ParamVSpin('设定击坠', 0)],
                   '[5D]机库操作 - 设定机师击坠数',
                   '设定指定机师击坠数'),
            0x5E: ('{0}擊墜数{1}',
                   [self.w['机师'], ParamVSpin('击坠变化', 0, '+d')],
                   '[5E]机库操作 - 调整机师击坠数',
                   '调整指定机师击坠数'),
            0x5F: ('{0}加入本方',
                   [self.w['机师']],
                   '[5F]场景控制 - 机师加入本方',
                   '场景上指定机师加入本方'),
            0x60: ('{0}轉爲第[{1}]勢力',
                   [self.w['机师'], self.w['势力']],
                   '[60]场景控制 - 机师势力转换',
                   '场景上指定机师转为指定势力'),
            0x61: ('增加芯片 {0}',
                   [self.w['芯片']],
                   '[61]资源操作 - 增加芯片',
                   '增加指定芯片'),
            0x62: ('增加{0}換装 {1}組件',
                   [ParamRCombo('选择机体', 0, {0: 'V2ガンダム', 1: 'ヒュッケバインMK-Ⅲ'}),
                    ParamRCombo('选择组件', 0, {0: '组件1', 1: '组件2'})],
                   '[62]资源操作 - 增加换装系统组件',
                   '增加V2ガンダム的不同换装'),
            0x63: ('[07D]V2ガンダム換装為{0}',
                   [self.w['机体']],
                   '[63]资源操作 - 指定V2ガンダム换装',
                   '为V2ガンダム更换上指定换装'),
            0x64: ('增加資金 {0}',
                   [ParamVSpin('资金金额', 0, )],
                   '[64]资源操作 - 增加资金',
                   '增加资金'),
            0x65: ('{0}復活',
                   [self.w['机师']],
                   '[65]场景操作 - 复活机师',
                   '复活指定机师'),
            0x66: ('{0}復活',
                   [self.w['机体']],
                   '[66]场景操作 - 复活机体',
                   '复活指定机体'),
            0x67: ('移動{0}到地圖絕對坐標 X{1} Y{2}',
                   [self.w['机师'], ParamVSpin('X坐标', 0), ParamVSpin('Y坐标', 0)],
                   '[67]光标操作 - 移动机师对话光标到绝对坐标',
                   '将机师光标移动到地图绝对坐标以待对话使用'),
            0x68: ('移動{0}到{1}相對坐標 X{2} Y{3}',
                   [self.w['机师'], self.w['机师'], ParamVSpin('X坐标', 0, '+d'), ParamVSpin('Y坐标', 0, '+d')],
                   '[68]光标操作 - 移动机师对话光标到相对坐标',
                   '将机师光标移动到另一机师相对坐标以待对话使用'),
            0x69: ('移動{0}到敵方序号[{2}]相對坐標 X{3} Y{4}',
                   [self.w['机师'],
                    self.w['无效'],
                    ParamVSpin('序号', 0x0, '02X'),
                    ParamVSpin('X坐标', 0, '+d'),
                    ParamVSpin('Y坐标', 0, '+d')],
                   '[69]光标操作 - 移动机师对话光标到敌方相对坐标',
                   '将机师光标移动到敌方设计指定单位的相对坐标以待对话使用'),
            0x6A: ('移動光標到地圖絕對坐標 X{0} Y{1}',
                   [ParamVSpin('X坐标', 0), ParamVSpin('Y坐标', 0)],
                   '[6A]光标操作 - 移动光标焦点到绝对坐标',
                   '将对话光标的焦点移动到地图绝对坐标'),
            0x6B: ('移動光標到{0}相對坐標 X{1} Y{2}',
                   [self.w['机师'], ParamVSpin('X坐标', 0, '+d'), ParamVSpin('Y坐标', 0, '+d')],
                   '[6B]光标操作 - 移动光标焦点到相对坐标',
                   '将对话光标的焦点移动到指定机师的相对坐标'),
            0x6C: ('移動光標到地圖絕對坐標 X{0} Y{1} 并停留{2}單位時間',
                   [ParamVSpin('X坐标', 0), ParamVSpin('Y坐标', 0), ParamVSpin('停留时间', 0)],
                   '[6C]光标操作 - 移动光标焦点到绝对坐标并停留',
                   '将对话光标的焦点移动到地图绝对坐标并停留一定时间'),
            0x6E: ('屏幕静止{0}',
                   [ParamVSpin('停留时间', 0)],
                   '[6E]光标操作 - 屏幕静止',
                   '对话光标焦点停留一定时间'),
            0x6F: ('{0}撤退',
                   [self.w['机师']],
                   '[6F]场景控制 - 机师撤退',
                   '指定机师强制撤退'),
            0x70: ('敵方序号[{1}]撤退',
                   [self.w['无效'], ParamVSpin('序号', 0x0, '02X')],
                   '[70]场景控制 - 敌方撤退',
                   '指定敌方设计单位强制撤退'),
            0x71: ('敵方第{0}組全部撤退',
                   [ParamVSpin('敌方组号', 0x0, '02d')],
                   '[71]场景控制 - 敌方小组撤退',
                   '指定敌方设计小组强制撤退'),
            0x72: ('第[{0}]勢力全部撤退',
                   [self.w['势力']],
                   '[72]场景控制 - 势力撤退',
                   '指定势力强制撤退'),
            0x73: ('{0}陣營撤退',
                   [self.w['阵营']],
                   '[73]场景控制 - 阵营撤退',
                   '指定阵营强制撤退'),
            0x74: ('{0}陣營撤退到 X{1}-X{3} Y{2}-Y{4}区域内',
                   [self.w['阵营'], ParamVSpin('X1', 1), ParamVSpin('Y1', 1), ParamVSpin('X2', 1), ParamVSpin('Y2', 1)],
                   '[74]场景控制 - 阵营撤退到区域',
                   '指定阵营撤退到划定的区域'),
            0x75: ('{0}{1}',
                   [self.w['机师'], self.w['状态']],
                   '[75]条件判断 - 判断机师状态',
                   '判断机师是否存在'),
            0x77: ('{0}{1}',
                   [self.w['机体'], self.w['状态']],
                   '[77]条件判断 - 判断机体状态',
                   '判断机体是否存在'),
            0x78: ('{0}處于搭載中',
                   [self.w['机师']],
                   '[78]条件判断 - 判断机师搭载状态',
                   '判断机师是否处于搭载状态中'),
            0x79: ('敵方第{0}組数量{1}{2}台',
                   [ParamVSpin('组号', 0, '02d'), self.w['比较'], ParamVSpin('数量', 0)],
                   '[79]条件判断 - 判断敌方小组数量',
                   '判断敌方小组数量'),
            0x7A: ('第[{0}]勢力数量{1}{2}台',
                   [self.w['势力'], self.w['比较'], ParamVSpin('数量', 0)],
                   '[7A]条件判断 - 判断势力数量',
                   '判断势力数量'),
            0x7B: ('{0}陣營数量{1}{2}台',
                   [self.w['阵营'], self.w['比较'], ParamVSpin('数量', 0)],
                   '[7B]条件判断 - 判断阵营数量',
                   '判断阵营数量'),
            0x7C: ('{0}進入 X{1}-X{3} Y{2}-Y{4}区域内',
                   [self.w['机师'], ParamVSpin('X1', 1), ParamVSpin('Y1', 1), ParamVSpin('X2', 1), ParamVSpin('Y2', 1)],
                   '[7C]条件判断 - 判断机师位置',
                   '判断指定机师是否进入划定区域'),
            0x7D: ('敵方序号[{1}]進入 X{2}-X{4} Y{3}-Y{5}区域内',
                   [self.w['无效'],
                    ParamVSpin('序号', 0, '02X'),
                    ParamVSpin('X1', 1),
                    ParamVSpin('Y1', 1),
                    ParamVSpin('X2', 1),
                    ParamVSpin('Y2', 1)],
                   '[7D]条件判断 - 判断敌方位置',
                   '判断敌方列表单位是否进入划定区域'),
            0x7E: ('{0}進 X{1}-X{3} Y{2}-Y{4}区域内',
                   [self.w['机体'], ParamVSpin('X1', 1), ParamVSpin('Y1', 1), ParamVSpin('X2', 1), ParamVSpin('Y2', 1)],
                   '[7E]条件判断 - 判断机体位置',
                   '判断指定机体是否进入划定区域'),
            0x80: ('第[{0}]勢力進入 X{1}-X{3} Y{2}-Y{4}区域内',
                   [self.w['势力'], ParamVSpin('X1', 1), ParamVSpin('Y1', 1), ParamVSpin('X2', 1), ParamVSpin('Y2', 1)],
                   '[80]条件判断 - 判断势力位置',
                   '判断势力是否进入划定区域'),
            0x81: ('{0}陣營進入 X{1}-X{3} Y{2}-Y{4}区域内',
                   [self.w['阵营'], ParamVSpin('X1', 1), ParamVSpin('Y1', 1), ParamVSpin('X2', 1), ParamVSpin('Y2', 1)],
                   '[81]条件判断 - 判断阵营位置',
                   '判断阵营是否进入划定区域'),
            0x82: ('{0}与{1}相距{2}格',
                   [self.w['机师'], self.w['机师'], ParamVSpin('距离', 1)],
                   '[82]条件判断 - 判断机师间距离',
                   '判断指定机师之间的距离'),
            0x83: ('{0}与敵方序号[{2}]相距{3}格',
                   [self.w['机师'], self.w['无效'], ParamVSpin('序号', 0, '02X'), ParamVSpin('距离', 1)],
                   '[83]条件判断 - 判断机师与敌方列表单位距离',
                   '判断指定机师与敌方列表单位之间的距离'),
            0x84: ('{0}气力調整為{1}',
                   [self.w['机师'], ParamVSpin('气力', 100)],
                   '[84]场景操作 - 调整机师气力',
                   '调整指定机师气力'),
            0x85: ('{0}陣營气力調整為{1}',
                   [self.w['阵营'], ParamVSpin('气力', 100)],
                   '[85]场景操作 - 调整阵营气力',
                   '调整阵营气力'),
            0x86: ('{0}EN减少{1}',
                   [self.w['机师'], ParamVSpin('EN减少', 100)],
                   '[86]场景操作 - 减少机师EN',
                   '减少指定机师EN'),
            0x87: ('場景操作相關未知指令',
                   [],
                   '[87]场景操作 - 未知',
                   '未知'),
            0x88: ('{0}HP調整{1}%',
                   [self.w['机师'], ParamVSpin('HP变化', 100)],
                   '[88]场景操作 - 调整机师HP',
                   '调整指定机师HP'),
            0x89: ('{0}陣營HP調整{1}%',
                   [self.w['阵营'], ParamVSpin('HP变化', 100)],
                   '[89]场景操作 - 调整阵营HP',
                   '调整指定阵营HP'),
            0x8B: ('{0}陣營SP調整{1}%',
                   [self.w['阵营'], ParamVSpin('SP变化', 100)],
                   '[8B]场景操作 - 调整阵营SP',
                   '调整指定阵营SP'),
            0x8C: ('{0}電纜連接到地圖絕對坐標 X{1} Y{2}',
                   [self.w['机师'], ParamVSpin('X坐标', 1), ParamVSpin('Y坐标', 1)],
                   '[8C]场景操作 - EVA电缆连接到绝对坐标',
                   '将指定机师的EVA电缆连接到地图绝对坐标'),
            0x8D: ('{0}電纜連接到{1}',
                   [self.w['机师'], self.w['机师']],
                   '[8D]场景操作 - EVA电缆连接到母舰',
                   '将指定机师的EVA电缆连接到指定母舰机师'),
            0x8E: ('{0}電纜就近連接',
                   [self.w['机师']],
                   '[8E]场景操作 - EVA电缆就近连接',
                   '将指定机师的EVA电缆就近连接到插座'),
            0x8F: ('{0}電纜强制断开',
                   [self.w['机师']],
                   '[8F]场景操作 - EVA电缆强制断开',
                   '将指定机师的EVA电缆断开'),
            0x90: ('{0}移動到地圖絕對坐標 X{1} Y{2}',
                   [self.w['机师'], ParamVSpin('X坐标', 1), ParamVSpin('Y坐标', 1)],
                   '[90]场景操作 - 移动机师到绝对坐标',
                   '将指定机师移动到地图绝对坐标'),
            0x91: ('敵方序号[{1}]移動到地圖絕對坐標 X{2} Y{3}',
                   [self.w['无效'],
                    ParamVSpin('序号', 0, '02X'),
                    ParamVSpin('X坐标', 1),
                    ParamVSpin('Y坐标', 1)],
                   '[91]场景操作 - 移动敌方列表单位到绝对坐标',
                   '将指定敌方列表单位移动到地图绝对坐标'),
            0x92: ('{0}移動到{1}相對坐標 X{2} Y{3} {4}',
                   [self.w['机师'], self.w['机师'], ParamVSpin('X坐标', 0), ParamVSpin('X坐标', 0), self.w['移动']],
                   '[92]场景操作 - 移动机师到相对坐标',
                   '将指定机师移动到另一机师相对坐标'),
            0x93: ('{0}移動到敵方序号[{2}]相對坐標 X{3} Y{4} {5}',
                   [self.w['机师'],
                    self.w['无效'],
                    ParamVSpin('序号', 0, '02X'),
                    ParamVSpin('X坐标', 0),
                    ParamVSpin('X坐标', 0),
                    self.w['移动']],
                   '[93]场景操作 - 移动机师到敌方单位相对坐标',
                   '将指定机师移动到指定敌方列表单位相对坐标'),
            0x94: ('敵方序号[{1}]移動到{2}相對坐標 X{3} Y{4} {5}',
                   [self.w['无效'],
                    ParamVSpin('序号', 0, '02X'),
                    self.w['机师'],
                    ParamVSpin('X坐标', 0),
                    ParamVSpin('X坐标', 0),
                    self.w['移动']],
                   '[94]场景操作 - 移动敌方单位到相对坐标',
                   '将指定敌方列表单位移动到指定机师相对坐标'),
            0x96: ('戰斗：{0} 攻擊 {1}\n攻方：武器編号[{2}] 命中{4}% 傷害{6}% {8}\n守方：武器編号[{3}] 命中{5}% 傷害{7}% {9}',
                   [self.w['机师'],
                    self.w['机师'],
                    ParamVSpin('攻方武器', 0, 'X'),
                    ParamVSpin('守方武器', 0, 'X'),
                    ParamVSpin('攻方命中', 0),
                    ParamVSpin('守方命中', 0),
                    ParamVSpin('攻方伤害', 0),
                    ParamVSpin('守方伤害', 0),
                    self.w['演出'],
                    self.w['演出']],
                   '[96]战斗演出 - 机师间强制战斗演出',
                   '指定机师攻击另一机师并设定进攻方与反击方效果'),
            0x97: ('戰斗：敵方序号[{1}] 攻擊 {2}\n攻方：武器編号[{3}] 命中{5}% 傷害{7}% {9}\n守方：武器編号[{4}] 命中{6}% 傷害{8}% {10}',
                   [self.w['无效'],
                    ParamVSpin('序号', 0, '02X'),
                    self.w['机师'],
                    ParamVSpin('攻方武器', 0, 'X'),
                    ParamVSpin('守方武器', 0, 'X'),
                    ParamVSpin('攻方命中', 0),
                    ParamVSpin('守方命中', 0),
                    ParamVSpin('攻方伤害', 0),
                    ParamVSpin('守方伤害', 0),
                    self.w['演出'],
                    self.w['演出']],
                   '[97]战斗演出 - 敌方列表单位攻击机师强制战斗演出',
                   '指定敌方列表单位攻击指定机师并设定进攻方与反击方效果'),
            0x98: ('戰斗：{0} 攻擊 敵方序号[{2}]\n攻方：武器編号[{3}] 命中{5}% 傷害{7}% {9}\n守方：武器編号[{4}] 命中{6}% 傷害{8}% {10}',
                   [self.w['机师'],
                    self.w['无效'],
                    ParamVSpin('序号', 0, '02X'),
                    ParamVSpin('攻方武器', 0, 'X'),
                    ParamVSpin('守方武器', 0, 'X'),
                    ParamVSpin('攻方命中', 0),
                    ParamVSpin('守方命中', 0),
                    ParamVSpin('攻方伤害', 0),
                    ParamVSpin('守方伤害', 0),
                    self.w['演出'],
                    self.w['演出']],
                   '[98]战斗演出 - 机师攻击敌方列表单位强制战斗演出',
                   '指定机师攻击指定敌方列表单位并设定进攻方与反击方效果'),
            0x99: ('戰斗關閉',
                   [],
                   '[99]战斗演出 - 关闭战斗演出',
                   '关闭强制战斗演出'),
            0x9A: ('允許第[{0}]勢力攻擊第[{1}]勢力',
                   [self.w['势力'], self.w['势力']],
                   '[9A]规则设置 - 势力攻击许可',
                   '允许指定势力攻击另一势力'),
            0x9B: ('禁止第[{0}]勢力攻擊第[{1}]勢力',
                   [self.w['势力'], self.w['势力']],
                   '[9B]规则设置 - 势力攻击禁止',
                   '禁止指定势力攻击另一势力'),
            0x9C: ('禁用{0}的{1}菜單選項',
                   [self.w['机师'], self.w['选项']],
                   '[9C]规则设置 - 禁用机师菜单选项',
                   '禁用指定机师的部分菜单选项\n菜单根据机体不同顺序有变化\n如变形机体和合体机体的菜单顺序就与普通机体不同'),
            0x9D: ('禁用敵方序号[{1}]的{2}菜單選項',
                   [self.w['无效'], ParamVSpin('序号', 0, '02X'), self.w['选项']],
                   '[9D]规则设置 - 禁用敌方菜单选项',
                   '禁用指定敌方列表单位的菜单选项'),
            0x9E: ('启用{0}的{1}菜單選項',
                   [self.w['机师'], self.w['选项']],
                   '[9E]规则设置 - 启用机师菜单选项',
                   '启用指定机师的部分菜单选项\n菜单根据机体不同顺序有变化\n如变形机体和合体机体的菜单顺序就与普通机体不同'),
            0x9F: ('{0}强制擊破',
                   [self.w['机师']],
                   '[9F]场景操作 - 强制击破机师',
                   '指定机师强制击破'),
            0xA0: ('敵方序号[{1}]强制擊破',
                   [self.w['无效'], ParamVSpin('序号', 0, '02X')],
                   '[A0]场景操作 - 强制击破敌方',
                   '指定敌方列表单位强制击破'),
            0xA1: ('{0}强制搭載',
                   [self.w['机师']],
                   '[A1]场景操作 - 机师强制搭载',
                   '指定机师强制搭载母舰'),
            0xA2: ('{0}取消搭載',
                   [self.w['机师']],
                   '[A2]场景操作 - 机师取消搭载',
                   '指定机师强制从搭载母舰上出击'),
            0xA3: ('{0}强制浮上',
                   [self.w['机师']],
                   '[A3]场景操作 - 机师强制浮上',
                   '指定机师强制浮起'),
            0xA4: ('{0}强制着地',
                   [self.w['机师']],
                   '[A4]场景操作 - 机师强制着地',
                   '指定机师强制着地'),
            0xA5: ('{0}搭乘机体强制變形為{1}',
                   [self.w['机师'], self.w['机体']],
                   '[A5]场景操作 - 强制变形',
                   '指定机师搭乘机体强制变形'),
            0xA6: ('{0}搭乘机体强制合体',
                   [self.w['机师']],
                   '[A6]场景操作 - 强制合体',
                   '指定机师搭乘机体强制合体'),
            0xA7: ('{0}搭乘机体强制分离',
                   [self.w['机师']],
                   '[A7]场景操作 - 强制分离',
                   '指定机师搭乘机体强制分离'),
            0xA8: ('{0}强制使用精神{1} {2}次',
                   [self.w['机师'], self.w['精神'], ParamVSpin('次数', 1), ParamRCombo('未知参数', 0, {0: '未知选项', 1: '未知选项'})],
                   '[A8]场景操作 - 强制使用精神',
                   '指定机师强制使用精神，并设定使用次数'),
            0xA9: ('{0}强制設爲{1}',
                   [self.w['机师'], self.w['行动']],
                   '[A9]场景操作 - 强制设定行动状态',
                   '指定机师设定行动状态'),
            0xAA: ('{0}强制切換傀儡系統',
                   [self.w['机师']],
                   '[AA]场景操作 - 强制切换傀儡系统',
                   '指定EVA机师切换傀儡系统'),
            0xAB: ('{0}可以說得{1}',
                   [self.w['机师'], self.w['机师']],
                   '[AB]说得选项 - 增加机师说得机师选项',
                   '指定机师与另一机师间增加说得选项'),
            0xAC: ('{0}可以說得敵方序号[{2}]',
                   [self.w['机师'], self.w['无效'], ParamVSpin('序号', 0, '02X')],
                   '[AC]说得选项 - 增加机师说得敌方选项',
                   '指定机师与敌方列表单位间增加说得选项'),
            0xAD: ('{0}已經說得{1}',
                   [self.w['机师'], self.w['机师']],
                   '[AD]条件判断 - 判断机师间说得状态',
                   '指定机师已经说得另一机师为真，否则为假'),
            0xAE: ('{0}已經說得敵方序号[{2}]',
                   [self.w['机师'], self.w['无效'], ParamVSpin('序号', 0, '02X')],
                   '[AE]条件判断 - 判断机师与敌方列表单位说得状态',
                   '指定机师已经说得指定敌方列表单位为真，否则为假'),
            0xAF: ('{0}与{1}交手',
                   [self.w['机师'], self.w['机师']],
                   '[AF]条件判断 - 判断机师间交手',
                   '指定机师与另一机师交手为真，否则为假'),
            0xB0: ('{0}与敵方序号[{2}]交手',
                   [self.w['机师'], self.w['无效'], ParamVSpin('序号', 0, '02X')],
                   '[B0]条件判断 - 判断机师与敌方交手',
                   '指定机师与指定敌方列表单位交手为真，否则为假'),
            0xB1: ('{0}發起攻擊',
                   [self.w['机师']],
                   '[B1]条件判断 - 判断机师交手',
                   '指定机师有交手为真，未交手为假'),
            0xB2: ('敵方序号[{1}]被擊破',
                   [self.w['无效'], ParamVSpin('序号', 0, '02X')],
                   '[B2]条件判断 - 判断敌方被击破',
                   '指定敌方列表单位被击破为真，否则为假'),
            0xB3: ('{0}被擊破',
                   [self.w['机师']],
                   '[B3]条件判断 - 判断机师被击破[BLOCK7]',
                   '指定机师被击破为真，否则为假，用于[BLOCK7]'),
            0xB4: ('{0}被擊破',
                   [self.w['机体']],
                   '[B4]条件判断 - 判断机体被击破',
                   '指定机体被击破为真，否则为假'),
            0xB5: ('本方被擊破{0}机',
                   [ParamVSpin('击破数量', 1)],
                   '[B5]条件判断 - 判断本方被击破数',
                   '判断本方被击破数量'),
            0xB6: ('{0}HP少于{1}%',
                   [self.w['机师'], ParamVSpin('HP', 0)],
                   '[B6]条件判断 - 判断机师HP量',
                   '判断机师HP量'),
            0xB7: ('{0}被擊破',
                   [self.w['机师']],
                   '[B7]条件判断 - 判断机师被击破[BLOCK8]',
                   '指定敌方列表单位被击破为真，否则为假，用于[BLOCK8]'),
            0xB8: ('敵方序号[{1}]未被擊破',
                   [self.w['无效'], ParamVSpin('序号', 0, '02X')],
                   '[B8]条件判断 - 判断敌方未被击破',
                   '指定敌方列表单位未被击破为真，否则为假'),
            0xB9: ('{1}以{3}進行特殊地圖演出 演出代碼[{2}] 子鏡頭数量：{0} \n子鏡頭碼[{}] 方向{} X坐標{} Y坐標{} ',
                   [ParamVSpin('子镜头数', 1),
                    self.w['机师'],
                    ParamVSpin('演出代码', 0, '02X'),
                    ParamRCombo('坐标定位', 0, {0: '絕對坐標', 1: '相對坐標'}),
                    ParamVSpin('子镜头', 0),
                    ParamRCombo('方向', 1, {1: '↖', 4: '↘', 5: ''}),
                    ParamVSpin('X坐标', 0, '+d'),
                    ParamVSpin('Y坐标', 0, '+d'), ],
                   '[B9]地图演出 - 相对坐标特殊地图演出',
                   '在指定机师的相对坐标进行特殊的地图演出'),
            0xBA: ('地圖演出[{0}] 地圖絕對坐標 X{1} Y{2}',
                   [ParamVSpin('演出特效', 0, '04X'),
                    ParamVSpin('X坐标', 1),
                    ParamVSpin('Y坐标', 1)],
                   '[BA]地图演出 - 绝对坐标地图演出',
                   '在地图绝对坐标进行地图演出'),
            0xBB: ('地圖演出[{0}] {1}相對坐標 X{2} Y{3}',
                   [ParamVSpin('演出特效', 0, '04X'),
                    self.w['机师'],
                    ParamVSpin('X坐标', 0),
                    ParamVSpin('Y坐标', 0)],
                   '[BB]地图演出 - 相对坐标地图演出',
                   '在指定机师的相对坐标进行地图演出'),
        }

    def explain(self, command: dict[str, int | list[int] | str]) -> str:
        code = command.get('Code')
        param = command.get('Param')
        param_setting: tuple[str, list[ParamWidget], str, str] = self.settings.get(code, (str(code), tuple()))
        param_text, param_widgets, *_ = param_setting
        if code == 0x62:
            param_widgets[1].init_mapping(EnumData.COMMAND['换装'][param[0]])

        explain_list = list()
        for param_idx, param_data in enumerate(param):
            if code != 0xB9 or param_idx < 8:
                param_widget = param_widgets[param_idx].new()
            else:
                param_widget = param_widgets[param_idx % 4 + 4].new()
            explain_list.append(param_widget.explain(param_data))
        if code == 0xB9:
            main_text, expand_text = param_text.splitlines()
            main_str = main_text.format(*explain_list[:4])
            expand_str = '\n'.join([expand_text] * param[0]).format(*explain_list[4:])
            return main_str + '\n' + expand_str
        return param_text.format(*explain_list)
